// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bookstore.proto

package main

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Author_Gender int32

const (
	Author_UNKNOWN Author_Gender = 0
	Author_MALE    Author_Gender = 1
	Author_FEMALE  Author_Gender = 2
)

var Author_Gender_name = map[int32]string{
	0: "UNKNOWN",
	1: "MALE",
	2: "FEMALE",
}

var Author_Gender_value = map[string]int32{
	"UNKNOWN": 0,
	"MALE":    1,
	"FEMALE":  2,
}

func (x Author_Gender) String() string {
	return proto.EnumName(Author_Gender_name, int32(x))
}

func (Author_Gender) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6f82f486e563a88c, []int{2, 0}
}

// A shelf resource.
type Shelf struct {
	// A unique shelf id.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// A theme of the shelf (fiction, poetry, etc).
	Theme                string   `protobuf:"bytes,2,opt,name=theme,proto3" json:"theme,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Shelf) Reset()         { *m = Shelf{} }
func (m *Shelf) String() string { return proto.CompactTextString(m) }
func (*Shelf) ProtoMessage()    {}
func (*Shelf) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f82f486e563a88c, []int{0}
}

func (m *Shelf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shelf.Unmarshal(m, b)
}
func (m *Shelf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shelf.Marshal(b, m, deterministic)
}
func (m *Shelf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shelf.Merge(m, src)
}
func (m *Shelf) XXX_Size() int {
	return xxx_messageInfo_Shelf.Size(m)
}
func (m *Shelf) XXX_DiscardUnknown() {
	xxx_messageInfo_Shelf.DiscardUnknown(m)
}

var xxx_messageInfo_Shelf proto.InternalMessageInfo

func (m *Shelf) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Shelf) GetTheme() string {
	if m != nil {
		return m.Theme
	}
	return ""
}

// A book resource.
type Book struct {
	// A unique book id.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// An author of the book.
	Author string `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	// A book title.
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// Quotes from the book.
	Quotes               []string `protobuf:"bytes,4,rep,name=quotes,proto3" json:"quotes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Book) Reset()         { *m = Book{} }
func (m *Book) String() string { return proto.CompactTextString(m) }
func (*Book) ProtoMessage()    {}
func (*Book) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f82f486e563a88c, []int{1}
}

func (m *Book) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Book.Unmarshal(m, b)
}
func (m *Book) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Book.Marshal(b, m, deterministic)
}
func (m *Book) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Book.Merge(m, src)
}
func (m *Book) XXX_Size() int {
	return xxx_messageInfo_Book.Size(m)
}
func (m *Book) XXX_DiscardUnknown() {
	xxx_messageInfo_Book.DiscardUnknown(m)
}

var xxx_messageInfo_Book proto.InternalMessageInfo

func (m *Book) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Book) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Book) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Book) GetQuotes() []string {
	if m != nil {
		return m.Quotes
	}
	return nil
}

// An author resource.
type Author struct {
	// A unique author id.
	Id                   int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Gender               Author_Gender `protobuf:"varint,2,opt,name=gender,proto3,enum=main.Author_Gender" json:"gender,omitempty"`
	FirstName            string        `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string        `protobuf:"bytes,4,opt,name=last_name,json=lname,proto3" json:"last_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Author) Reset()         { *m = Author{} }
func (m *Author) String() string { return proto.CompactTextString(m) }
func (*Author) ProtoMessage()    {}
func (*Author) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f82f486e563a88c, []int{2}
}

func (m *Author) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Author.Unmarshal(m, b)
}
func (m *Author) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Author.Marshal(b, m, deterministic)
}
func (m *Author) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Author.Merge(m, src)
}
func (m *Author) XXX_Size() int {
	return xxx_messageInfo_Author.Size(m)
}
func (m *Author) XXX_DiscardUnknown() {
	xxx_messageInfo_Author.DiscardUnknown(m)
}

var xxx_messageInfo_Author proto.InternalMessageInfo

func (m *Author) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Author) GetGender() Author_Gender {
	if m != nil {
		return m.Gender
	}
	return Author_UNKNOWN
}

func (m *Author) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Author) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

// Response to ListShelves call.
type ListShelvesResponse struct {
	// Shelves in the bookstore.
	Shelves              []*Shelf `protobuf:"bytes,1,rep,name=shelves,proto3" json:"shelves,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListShelvesResponse) Reset()         { *m = ListShelvesResponse{} }
func (m *ListShelvesResponse) String() string { return proto.CompactTextString(m) }
func (*ListShelvesResponse) ProtoMessage()    {}
func (*ListShelvesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f82f486e563a88c, []int{3}
}

func (m *ListShelvesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListShelvesResponse.Unmarshal(m, b)
}
func (m *ListShelvesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListShelvesResponse.Marshal(b, m, deterministic)
}
func (m *ListShelvesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListShelvesResponse.Merge(m, src)
}
func (m *ListShelvesResponse) XXX_Size() int {
	return xxx_messageInfo_ListShelvesResponse.Size(m)
}
func (m *ListShelvesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListShelvesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListShelvesResponse proto.InternalMessageInfo

func (m *ListShelvesResponse) GetShelves() []*Shelf {
	if m != nil {
		return m.Shelves
	}
	return nil
}

// Request message for CreateShelf method.
type CreateShelfRequest struct {
	// The shelf resource to create.
	Shelf                *Shelf   `protobuf:"bytes,1,opt,name=shelf,proto3" json:"shelf,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateShelfRequest) Reset()         { *m = CreateShelfRequest{} }
func (m *CreateShelfRequest) String() string { return proto.CompactTextString(m) }
func (*CreateShelfRequest) ProtoMessage()    {}
func (*CreateShelfRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f82f486e563a88c, []int{4}
}

func (m *CreateShelfRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateShelfRequest.Unmarshal(m, b)
}
func (m *CreateShelfRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateShelfRequest.Marshal(b, m, deterministic)
}
func (m *CreateShelfRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateShelfRequest.Merge(m, src)
}
func (m *CreateShelfRequest) XXX_Size() int {
	return xxx_messageInfo_CreateShelfRequest.Size(m)
}
func (m *CreateShelfRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateShelfRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateShelfRequest proto.InternalMessageInfo

func (m *CreateShelfRequest) GetShelf() *Shelf {
	if m != nil {
		return m.Shelf
	}
	return nil
}

// Request message for GetShelf method.
type GetShelfRequest struct {
	// The ID of the shelf resource to retrieve.
	Shelf                int64    `protobuf:"varint,1,opt,name=shelf,proto3" json:"shelf,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetShelfRequest) Reset()         { *m = GetShelfRequest{} }
func (m *GetShelfRequest) String() string { return proto.CompactTextString(m) }
func (*GetShelfRequest) ProtoMessage()    {}
func (*GetShelfRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f82f486e563a88c, []int{5}
}

func (m *GetShelfRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetShelfRequest.Unmarshal(m, b)
}
func (m *GetShelfRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetShelfRequest.Marshal(b, m, deterministic)
}
func (m *GetShelfRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetShelfRequest.Merge(m, src)
}
func (m *GetShelfRequest) XXX_Size() int {
	return xxx_messageInfo_GetShelfRequest.Size(m)
}
func (m *GetShelfRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetShelfRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetShelfRequest proto.InternalMessageInfo

func (m *GetShelfRequest) GetShelf() int64 {
	if m != nil {
		return m.Shelf
	}
	return 0
}

// Request message for DeleteShelf method.
type DeleteShelfRequest struct {
	// The ID of the shelf to delete.
	Shelf                int64    `protobuf:"varint,1,opt,name=shelf,proto3" json:"shelf,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteShelfRequest) Reset()         { *m = DeleteShelfRequest{} }
func (m *DeleteShelfRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteShelfRequest) ProtoMessage()    {}
func (*DeleteShelfRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f82f486e563a88c, []int{6}
}

func (m *DeleteShelfRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteShelfRequest.Unmarshal(m, b)
}
func (m *DeleteShelfRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteShelfRequest.Marshal(b, m, deterministic)
}
func (m *DeleteShelfRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteShelfRequest.Merge(m, src)
}
func (m *DeleteShelfRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteShelfRequest.Size(m)
}
func (m *DeleteShelfRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteShelfRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteShelfRequest proto.InternalMessageInfo

func (m *DeleteShelfRequest) GetShelf() int64 {
	if m != nil {
		return m.Shelf
	}
	return 0
}

// Request message for ListBooks method.
type ListBooksRequest struct {
	// ID of the shelf which books to list.
	Shelf                int64    `protobuf:"varint,1,opt,name=shelf,proto3" json:"shelf,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListBooksRequest) Reset()         { *m = ListBooksRequest{} }
func (m *ListBooksRequest) String() string { return proto.CompactTextString(m) }
func (*ListBooksRequest) ProtoMessage()    {}
func (*ListBooksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f82f486e563a88c, []int{7}
}

func (m *ListBooksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBooksRequest.Unmarshal(m, b)
}
func (m *ListBooksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBooksRequest.Marshal(b, m, deterministic)
}
func (m *ListBooksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBooksRequest.Merge(m, src)
}
func (m *ListBooksRequest) XXX_Size() int {
	return xxx_messageInfo_ListBooksRequest.Size(m)
}
func (m *ListBooksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBooksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListBooksRequest proto.InternalMessageInfo

func (m *ListBooksRequest) GetShelf() int64 {
	if m != nil {
		return m.Shelf
	}
	return 0
}

// Request message for CreateBook method.
type CreateBookRequest struct {
	// The ID of the shelf on which to create a book.
	Shelf int64 `protobuf:"varint,1,opt,name=shelf,proto3" json:"shelf,omitempty"`
	// A book resource to create on the shelf.
	Book                 *Book    `protobuf:"bytes,2,opt,name=book,proto3" json:"book,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateBookRequest) Reset()         { *m = CreateBookRequest{} }
func (m *CreateBookRequest) String() string { return proto.CompactTextString(m) }
func (*CreateBookRequest) ProtoMessage()    {}
func (*CreateBookRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f82f486e563a88c, []int{8}
}

func (m *CreateBookRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBookRequest.Unmarshal(m, b)
}
func (m *CreateBookRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBookRequest.Marshal(b, m, deterministic)
}
func (m *CreateBookRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBookRequest.Merge(m, src)
}
func (m *CreateBookRequest) XXX_Size() int {
	return xxx_messageInfo_CreateBookRequest.Size(m)
}
func (m *CreateBookRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBookRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBookRequest proto.InternalMessageInfo

func (m *CreateBookRequest) GetShelf() int64 {
	if m != nil {
		return m.Shelf
	}
	return 0
}

func (m *CreateBookRequest) GetBook() *Book {
	if m != nil {
		return m.Book
	}
	return nil
}

// Request message for GetBook method.
type GetBookRequest struct {
	// The ID of the shelf from which to retrieve a book.
	Shelf int64 `protobuf:"varint,1,opt,name=shelf,proto3" json:"shelf,omitempty"`
	// The ID of the book to retrieve.
	Book                 int64    `protobuf:"varint,2,opt,name=book,proto3" json:"book,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBookRequest) Reset()         { *m = GetBookRequest{} }
func (m *GetBookRequest) String() string { return proto.CompactTextString(m) }
func (*GetBookRequest) ProtoMessage()    {}
func (*GetBookRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f82f486e563a88c, []int{9}
}

func (m *GetBookRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBookRequest.Unmarshal(m, b)
}
func (m *GetBookRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBookRequest.Marshal(b, m, deterministic)
}
func (m *GetBookRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBookRequest.Merge(m, src)
}
func (m *GetBookRequest) XXX_Size() int {
	return xxx_messageInfo_GetBookRequest.Size(m)
}
func (m *GetBookRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBookRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBookRequest proto.InternalMessageInfo

func (m *GetBookRequest) GetShelf() int64 {
	if m != nil {
		return m.Shelf
	}
	return 0
}

func (m *GetBookRequest) GetBook() int64 {
	if m != nil {
		return m.Book
	}
	return 0
}

// Request message for UpdateBook method
type UpdateBookRequest struct {
	// The ID of the shelf from which to retrieve a book.
	Shelf int64 `protobuf:"varint,1,opt,name=shelf,proto3" json:"shelf,omitempty"`
	// A book resource to update on the shelf.
	Book                 *Book    `protobuf:"bytes,2,opt,name=book,proto3" json:"book,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateBookRequest) Reset()         { *m = UpdateBookRequest{} }
func (m *UpdateBookRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateBookRequest) ProtoMessage()    {}
func (*UpdateBookRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f82f486e563a88c, []int{10}
}

func (m *UpdateBookRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateBookRequest.Unmarshal(m, b)
}
func (m *UpdateBookRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateBookRequest.Marshal(b, m, deterministic)
}
func (m *UpdateBookRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateBookRequest.Merge(m, src)
}
func (m *UpdateBookRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateBookRequest.Size(m)
}
func (m *UpdateBookRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateBookRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateBookRequest proto.InternalMessageInfo

func (m *UpdateBookRequest) GetShelf() int64 {
	if m != nil {
		return m.Shelf
	}
	return 0
}

func (m *UpdateBookRequest) GetBook() *Book {
	if m != nil {
		return m.Book
	}
	return nil
}

// Request message for DeleteBook method.
type DeleteBookRequest struct {
	// The ID of the shelf from which to delete a book.
	Shelf int64 `protobuf:"varint,1,opt,name=shelf,proto3" json:"shelf,omitempty"`
	// The ID of the book to delete.
	Book                 int64    `protobuf:"varint,2,opt,name=book,proto3" json:"book,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteBookRequest) Reset()         { *m = DeleteBookRequest{} }
func (m *DeleteBookRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteBookRequest) ProtoMessage()    {}
func (*DeleteBookRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f82f486e563a88c, []int{11}
}

func (m *DeleteBookRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteBookRequest.Unmarshal(m, b)
}
func (m *DeleteBookRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteBookRequest.Marshal(b, m, deterministic)
}
func (m *DeleteBookRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBookRequest.Merge(m, src)
}
func (m *DeleteBookRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteBookRequest.Size(m)
}
func (m *DeleteBookRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBookRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBookRequest proto.InternalMessageInfo

func (m *DeleteBookRequest) GetShelf() int64 {
	if m != nil {
		return m.Shelf
	}
	return 0
}

func (m *DeleteBookRequest) GetBook() int64 {
	if m != nil {
		return m.Book
	}
	return 0
}

// Request message for GetAuthor method.
type GetAuthorRequest struct {
	// The ID of the author resource to retrieve.
	Author               int64    `protobuf:"varint,1,opt,name=author,proto3" json:"author,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAuthorRequest) Reset()         { *m = GetAuthorRequest{} }
func (m *GetAuthorRequest) String() string { return proto.CompactTextString(m) }
func (*GetAuthorRequest) ProtoMessage()    {}
func (*GetAuthorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f82f486e563a88c, []int{12}
}

func (m *GetAuthorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAuthorRequest.Unmarshal(m, b)
}
func (m *GetAuthorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAuthorRequest.Marshal(b, m, deterministic)
}
func (m *GetAuthorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAuthorRequest.Merge(m, src)
}
func (m *GetAuthorRequest) XXX_Size() int {
	return xxx_messageInfo_GetAuthorRequest.Size(m)
}
func (m *GetAuthorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAuthorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAuthorRequest proto.InternalMessageInfo

func (m *GetAuthorRequest) GetAuthor() int64 {
	if m != nil {
		return m.Author
	}
	return 0
}

func init() {
	proto.RegisterEnum("main.Author_Gender", Author_Gender_name, Author_Gender_value)
	proto.RegisterType((*Shelf)(nil), "main.Shelf")
	proto.RegisterType((*Book)(nil), "main.Book")
	proto.RegisterType((*Author)(nil), "main.Author")
	proto.RegisterType((*ListShelvesResponse)(nil), "main.ListShelvesResponse")
	proto.RegisterType((*CreateShelfRequest)(nil), "main.CreateShelfRequest")
	proto.RegisterType((*GetShelfRequest)(nil), "main.GetShelfRequest")
	proto.RegisterType((*DeleteShelfRequest)(nil), "main.DeleteShelfRequest")
	proto.RegisterType((*ListBooksRequest)(nil), "main.ListBooksRequest")
	proto.RegisterType((*CreateBookRequest)(nil), "main.CreateBookRequest")
	proto.RegisterType((*GetBookRequest)(nil), "main.GetBookRequest")
	proto.RegisterType((*UpdateBookRequest)(nil), "main.UpdateBookRequest")
	proto.RegisterType((*DeleteBookRequest)(nil), "main.DeleteBookRequest")
	proto.RegisterType((*GetAuthorRequest)(nil), "main.GetAuthorRequest")
}

func init() {
	proto.RegisterFile("bookstore.proto", fileDescriptor_6f82f486e563a88c)
}

var fileDescriptor_6f82f486e563a88c = []byte{
	// 773 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xdb, 0x6e, 0xda, 0x4a,
	0x14, 0x8d, 0x81, 0x40, 0xd8, 0x9c, 0x13, 0x60, 0x27, 0xe1, 0x38, 0xce, 0xe5, 0xd0, 0x69, 0xa3,
	0xa2, 0x44, 0xb1, 0x23, 0xfa, 0x50, 0x29, 0x6a, 0x1f, 0x42, 0x9b, 0xd2, 0x28, 0x29, 0xb4, 0xa4,
	0x51, 0xa4, 0xaa, 0x52, 0x65, 0xc4, 0x90, 0x58, 0x18, 0x86, 0xe0, 0xa1, 0x52, 0x15, 0xf1, 0xd2,
	0x5f, 0xe8, 0x67, 0xf4, 0x73, 0xfa, 0x0b, 0x7d, 0xef, 0x2f, 0x54, 0x9e, 0xf1, 0x80, 0xb9, 0xa5,
	0x52, 0xd4, 0x27, 0x3c, 0x33, 0x6b, 0xaf, 0x59, 0x7b, 0x7b, 0x2d, 0x0c, 0xe9, 0x3a, 0x63, 0x2d,
	0x8f, 0xb3, 0x1e, 0x35, 0xbb, 0x3d, 0xc6, 0x19, 0xc6, 0xda, 0xb6, 0xd3, 0x31, 0x36, 0xaf, 0x18,
	0xbb, 0x72, 0xa9, 0x65, 0x77, 0x1d, 0xcb, 0xee, 0x74, 0x18, 0xb7, 0xb9, 0xc3, 0x3a, 0x9e, 0xc4,
	0x18, 0x1b, 0xc1, 0xa9, 0x58, 0xd5, 0xfb, 0x4d, 0x8b, 0xb6, 0xbb, 0xfc, 0x8b, 0x3c, 0x24, 0xfb,
	0xb0, 0x78, 0x7e, 0x4d, 0xdd, 0x26, 0x2e, 0x43, 0xc4, 0x69, 0xe8, 0x5a, 0x5e, 0x2b, 0x44, 0x6b,
	0x11, 0xa7, 0x81, 0xab, 0xb0, 0xc8, 0xaf, 0x69, 0x9b, 0xea, 0x91, 0xbc, 0x56, 0x48, 0xd6, 0xe4,
	0x82, 0x7c, 0x84, 0x58, 0x89, 0xb1, 0xd6, 0x14, 0x3a, 0x07, 0x71, 0xbb, 0xcf, 0xaf, 0x59, 0x2f,
	0x80, 0x07, 0x2b, 0xc1, 0xe2, 0x70, 0x97, 0xea, 0xd1, 0x80, 0xc5, 0x5f, 0xf8, 0xe8, 0x9b, 0x3e,
	0xe3, 0xd4, 0xd3, 0x63, 0xf9, 0xa8, 0x8f, 0x96, 0x2b, 0xf2, 0x5d, 0x83, 0xf8, 0x91, 0x2c, 0x9c,
	0xbc, 0x60, 0x0f, 0xe2, 0x57, 0xb4, 0xd3, 0xa0, 0xf2, 0x82, 0xe5, 0xe2, 0x8a, 0xe9, 0x77, 0x6e,
	0x4a, 0xb4, 0x59, 0x16, 0x47, 0xb5, 0x00, 0x82, 0x5b, 0x00, 0x4d, 0xa7, 0xe7, 0xf1, 0x4f, 0x1d,
	0xbb, 0xad, 0xae, 0x4e, 0x8a, 0x9d, 0x8a, 0xdd, 0xa6, 0xa8, 0x43, 0xd2, 0xb5, 0xd5, 0x69, 0x4c,
	0x0a, 0x73, 0xfd, 0x05, 0xd9, 0x83, 0xb8, 0xa4, 0xc2, 0x14, 0x24, 0x2e, 0x2a, 0xa7, 0x95, 0xea,
	0x65, 0x25, 0xb3, 0x80, 0x4b, 0x10, 0x7b, 0x73, 0x74, 0x76, 0x9c, 0xd1, 0x10, 0x20, 0xfe, 0xea,
	0x58, 0x3c, 0x47, 0xc8, 0x33, 0x58, 0x39, 0x73, 0x3c, 0xee, 0x8f, 0xef, 0x33, 0xf5, 0x6a, 0xd4,
	0xeb, 0xb2, 0x8e, 0x47, 0x71, 0x07, 0x12, 0x9e, 0xdc, 0xd2, 0xb5, 0x7c, 0xb4, 0x90, 0x2a, 0xa6,
	0xa4, 0x54, 0x31, 0xe6, 0x9a, 0x3a, 0x23, 0x4f, 0x01, 0x5f, 0xf4, 0xa8, 0xcd, 0xa9, 0xdc, 0xa7,
	0x37, 0x7d, 0xea, 0x71, 0x7c, 0x00, 0x8b, 0x3e, 0xa0, 0x29, 0x3a, 0x9f, 0x28, 0x95, 0x27, 0xe4,
	0x31, 0xa4, 0xcb, 0x94, 0x8f, 0x55, 0xad, 0x86, 0xab, 0xa2, 0x0a, 0xb8, 0x0b, 0xf8, 0x92, 0xba,
	0x74, 0xe2, 0x86, 0xd9, 0xd8, 0x02, 0x64, 0xfc, 0x5e, 0xfc, 0x77, 0xeb, 0xdd, 0x8d, 0x3c, 0x81,
	0xac, 0xd4, 0xed, 0x63, 0xef, 0x84, 0xe2, 0x36, 0xc4, 0x7c, 0xbf, 0x8a, 0x37, 0x96, 0x2a, 0x82,
	0xec, 0x45, 0x94, 0x89, 0x7d, 0x72, 0x08, 0xcb, 0x65, 0xca, 0xff, 0xcc, 0x83, 0x21, 0x9e, 0x68,
	0x50, 0x7b, 0x02, 0xd9, 0x8b, 0x6e, 0xe3, 0xaf, 0xc8, 0x78, 0x0e, 0x59, 0x39, 0xa7, 0xfb, 0x29,
	0xd9, 0x85, 0x4c, 0x99, 0x72, 0x69, 0x44, 0x55, 0x3d, 0x8a, 0x83, 0x2c, 0x0f, 0x56, 0xc5, 0x5f,
	0x09, 0x48, 0x96, 0x54, 0x84, 0xb1, 0x06, 0xa9, 0x90, 0x81, 0x30, 0x67, 0xca, 0xa0, 0x9a, 0x2a,
	0xa8, 0xe6, 0xb1, 0x1f, 0x54, 0x63, 0x5d, 0x2a, 0x9e, 0xe1, 0x35, 0x92, 0xf9, 0xfa, 0xe3, 0xe7,
	0xb7, 0x08, 0xe0, 0x92, 0x15, 0xd8, 0x0a, 0x4f, 0x21, 0x15, 0xb2, 0x15, 0xea, 0xb2, 0x76, 0xda,
	0x69, 0x46, 0xd8, 0x5a, 0x64, 0x4d, 0xf0, 0xa4, 0x49, 0x5c, 0xf0, 0x34, 0x0f, 0x83, 0x76, 0x3f,
	0x40, 0xba, 0xd4, 0x77, 0x5b, 0xf7, 0x20, 0xdc, 0x14, 0x84, 0x39, 0xf2, 0xaf, 0x55, 0xef, 0xbb,
	0x2d, 0xa5, 0x2e, 0xe0, 0x2d, 0x68, 0x07, 0x1a, 0xbe, 0x86, 0x25, 0x65, 0x63, 0x5c, 0x93, 0xa5,
	0x13, 0xb6, 0x1e, 0x67, 0xd4, 0x05, 0x23, 0x62, 0x46, 0x91, 0x59, 0xb7, 0x82, 0x6c, 0x80, 0x47,
	0x90, 0x0a, 0xf9, 0x5c, 0x29, 0x9c, 0xb6, 0xbe, 0x31, 0x67, 0xc0, 0x64, 0x01, 0xdf, 0x41, 0x72,
	0x68, 0x7f, 0xcc, 0x8d, 0xe6, 0x1d, 0xce, 0x83, 0x11, 0x72, 0x0e, 0xd9, 0x16, 0x6a, 0x74, 0xcc,
	0x4d, 0xaa, 0xb1, 0xc4, 0x3f, 0xf4, 0x81, 0x86, 0x97, 0x00, 0xa3, 0x9c, 0xe0, 0x7f, 0xe1, 0xb1,
	0x85, 0x7c, 0x36, 0x46, 0xfa, 0x48, 0x90, 0x6e, 0x1b, 0x73, 0x48, 0x0f, 0x85, 0xdf, 0x70, 0x1f,
	0x12, 0x41, 0x6a, 0x70, 0x75, 0x38, 0xb7, 0x79, 0x94, 0x0b, 0xd8, 0x00, 0x18, 0xb9, 0x5b, 0xe9,
	0x98, 0xf2, 0xfb, 0xdc, 0xd9, 0xec, 0x08, 0x4d, 0xff, 0xef, 0x6e, 0xcd, 0xd6, 0x64, 0xdd, 0xfa,
	0x3f, 0x03, 0xb4, 0x01, 0x46, 0x71, 0x54, 0xb7, 0x4c, 0x05, 0x74, 0x4c, 0x9a, 0x29, 0x98, 0x0b,
	0xc5, 0xfc, 0x5d, 0xcc, 0xa6, 0xd3, 0x18, 0x04, 0x7d, 0x37, 0x21, 0x33, 0x8c, 0x4e, 0xb5, 0x2b,
	0x3e, 0x70, 0xf3, 0x8c, 0x33, 0xaf, 0x99, 0x87, 0xe2, 0xca, 0xad, 0xd2, 0x06, 0x24, 0xaa, 0x6f,
	0xdf, 0x9f, 0x54, 0x2b, 0xe7, 0x33, 0xec, 0x74, 0x06, 0xc9, 0x61, 0x9e, 0x95, 0x17, 0x26, 0x03,
	0x6e, 0xfc, 0x13, 0xfe, 0xfc, 0x90, 0x75, 0xc1, 0xbb, 0x82, 0x59, 0x4b, 0xe6, 0xdc, 0xb3, 0x6e,
	0xe5, 0xc3, 0xa0, 0x1e, 0x17, 0x12, 0x9e, 0xfc, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xa4, 0xd0, 0x3d,
	0xcb, 0xba, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BookstoreClient is the client API for Bookstore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BookstoreClient interface {
	// Returns a list of all shelves in the bookstore.
	ListShelves(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListShelvesResponse, error)
	// Creates a new shelf in the bookstore.
	CreateShelf(ctx context.Context, in *CreateShelfRequest, opts ...grpc.CallOption) (*Shelf, error)
	// Creates multiple shelves with one streaming call
	BulkCreateShelf(ctx context.Context, opts ...grpc.CallOption) (Bookstore_BulkCreateShelfClient, error)
	// Returns a specific bookstore shelf.
	GetShelf(ctx context.Context, in *GetShelfRequest, opts ...grpc.CallOption) (*Shelf, error)
	// Deletes a shelf, including all books that are stored on the shelf.
	DeleteShelf(ctx context.Context, in *DeleteShelfRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Returns a list of books on a shelf.
	ListBooks(ctx context.Context, in *ListBooksRequest, opts ...grpc.CallOption) (Bookstore_ListBooksClient, error)
	// Creates a new book.
	CreateBook(ctx context.Context, in *CreateBookRequest, opts ...grpc.CallOption) (*Book, error)
	// Returns a specific book.
	GetBook(ctx context.Context, in *GetBookRequest, opts ...grpc.CallOption) (*Book, error)
	// Deletes a book from a shelf.
	DeleteBook(ctx context.Context, in *DeleteBookRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	UpdateBook(ctx context.Context, in *UpdateBookRequest, opts ...grpc.CallOption) (*Book, error)
	BookstoreOptions(ctx context.Context, in *GetShelfRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Returns a specific author.
	GetAuthor(ctx context.Context, in *GetAuthorRequest, opts ...grpc.CallOption) (*Author, error)
}

type bookstoreClient struct {
	cc grpc.ClientConnInterface
}

func NewBookstoreClient(cc grpc.ClientConnInterface) BookstoreClient {
	return &bookstoreClient{cc}
}

func (c *bookstoreClient) ListShelves(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListShelvesResponse, error) {
	out := new(ListShelvesResponse)
	err := c.cc.Invoke(ctx, "/main.Bookstore/ListShelves", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookstoreClient) CreateShelf(ctx context.Context, in *CreateShelfRequest, opts ...grpc.CallOption) (*Shelf, error) {
	out := new(Shelf)
	err := c.cc.Invoke(ctx, "/main.Bookstore/CreateShelf", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookstoreClient) BulkCreateShelf(ctx context.Context, opts ...grpc.CallOption) (Bookstore_BulkCreateShelfClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Bookstore_serviceDesc.Streams[0], "/main.Bookstore/BulkCreateShelf", opts...)
	if err != nil {
		return nil, err
	}
	x := &bookstoreBulkCreateShelfClient{stream}
	return x, nil
}

type Bookstore_BulkCreateShelfClient interface {
	Send(*CreateShelfRequest) error
	Recv() (*Shelf, error)
	grpc.ClientStream
}

type bookstoreBulkCreateShelfClient struct {
	grpc.ClientStream
}

func (x *bookstoreBulkCreateShelfClient) Send(m *CreateShelfRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *bookstoreBulkCreateShelfClient) Recv() (*Shelf, error) {
	m := new(Shelf)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *bookstoreClient) GetShelf(ctx context.Context, in *GetShelfRequest, opts ...grpc.CallOption) (*Shelf, error) {
	out := new(Shelf)
	err := c.cc.Invoke(ctx, "/main.Bookstore/GetShelf", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookstoreClient) DeleteShelf(ctx context.Context, in *DeleteShelfRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/main.Bookstore/DeleteShelf", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookstoreClient) ListBooks(ctx context.Context, in *ListBooksRequest, opts ...grpc.CallOption) (Bookstore_ListBooksClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Bookstore_serviceDesc.Streams[1], "/main.Bookstore/ListBooks", opts...)
	if err != nil {
		return nil, err
	}
	x := &bookstoreListBooksClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Bookstore_ListBooksClient interface {
	Recv() (*Book, error)
	grpc.ClientStream
}

type bookstoreListBooksClient struct {
	grpc.ClientStream
}

func (x *bookstoreListBooksClient) Recv() (*Book, error) {
	m := new(Book)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *bookstoreClient) CreateBook(ctx context.Context, in *CreateBookRequest, opts ...grpc.CallOption) (*Book, error) {
	out := new(Book)
	err := c.cc.Invoke(ctx, "/main.Bookstore/CreateBook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookstoreClient) GetBook(ctx context.Context, in *GetBookRequest, opts ...grpc.CallOption) (*Book, error) {
	out := new(Book)
	err := c.cc.Invoke(ctx, "/main.Bookstore/GetBook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookstoreClient) DeleteBook(ctx context.Context, in *DeleteBookRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/main.Bookstore/DeleteBook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookstoreClient) UpdateBook(ctx context.Context, in *UpdateBookRequest, opts ...grpc.CallOption) (*Book, error) {
	out := new(Book)
	err := c.cc.Invoke(ctx, "/main.Bookstore/UpdateBook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookstoreClient) BookstoreOptions(ctx context.Context, in *GetShelfRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/main.Bookstore/BookstoreOptions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookstoreClient) GetAuthor(ctx context.Context, in *GetAuthorRequest, opts ...grpc.CallOption) (*Author, error) {
	out := new(Author)
	err := c.cc.Invoke(ctx, "/main.Bookstore/GetAuthor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BookstoreServer is the server API for Bookstore service.
type BookstoreServer interface {
	// Returns a list of all shelves in the bookstore.
	ListShelves(context.Context, *empty.Empty) (*ListShelvesResponse, error)
	// Creates a new shelf in the bookstore.
	CreateShelf(context.Context, *CreateShelfRequest) (*Shelf, error)
	// Creates multiple shelves with one streaming call
	BulkCreateShelf(Bookstore_BulkCreateShelfServer) error
	// Returns a specific bookstore shelf.
	GetShelf(context.Context, *GetShelfRequest) (*Shelf, error)
	// Deletes a shelf, including all books that are stored on the shelf.
	DeleteShelf(context.Context, *DeleteShelfRequest) (*empty.Empty, error)
	// Returns a list of books on a shelf.
	ListBooks(*ListBooksRequest, Bookstore_ListBooksServer) error
	// Creates a new book.
	CreateBook(context.Context, *CreateBookRequest) (*Book, error)
	// Returns a specific book.
	GetBook(context.Context, *GetBookRequest) (*Book, error)
	// Deletes a book from a shelf.
	DeleteBook(context.Context, *DeleteBookRequest) (*empty.Empty, error)
	UpdateBook(context.Context, *UpdateBookRequest) (*Book, error)
	BookstoreOptions(context.Context, *GetShelfRequest) (*empty.Empty, error)
	// Returns a specific author.
	GetAuthor(context.Context, *GetAuthorRequest) (*Author, error)
}

// UnimplementedBookstoreServer can be embedded to have forward compatible implementations.
type UnimplementedBookstoreServer struct {
}

func (*UnimplementedBookstoreServer) ListShelves(ctx context.Context, req *empty.Empty) (*ListShelvesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListShelves not implemented")
}
func (*UnimplementedBookstoreServer) CreateShelf(ctx context.Context, req *CreateShelfRequest) (*Shelf, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateShelf not implemented")
}
func (*UnimplementedBookstoreServer) BulkCreateShelf(srv Bookstore_BulkCreateShelfServer) error {
	return status.Errorf(codes.Unimplemented, "method BulkCreateShelf not implemented")
}
func (*UnimplementedBookstoreServer) GetShelf(ctx context.Context, req *GetShelfRequest) (*Shelf, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShelf not implemented")
}
func (*UnimplementedBookstoreServer) DeleteShelf(ctx context.Context, req *DeleteShelfRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteShelf not implemented")
}
func (*UnimplementedBookstoreServer) ListBooks(req *ListBooksRequest, srv Bookstore_ListBooksServer) error {
	return status.Errorf(codes.Unimplemented, "method ListBooks not implemented")
}
func (*UnimplementedBookstoreServer) CreateBook(ctx context.Context, req *CreateBookRequest) (*Book, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBook not implemented")
}
func (*UnimplementedBookstoreServer) GetBook(ctx context.Context, req *GetBookRequest) (*Book, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBook not implemented")
}
func (*UnimplementedBookstoreServer) DeleteBook(ctx context.Context, req *DeleteBookRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBook not implemented")
}
func (*UnimplementedBookstoreServer) UpdateBook(ctx context.Context, req *UpdateBookRequest) (*Book, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBook not implemented")
}
func (*UnimplementedBookstoreServer) BookstoreOptions(ctx context.Context, req *GetShelfRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BookstoreOptions not implemented")
}
func (*UnimplementedBookstoreServer) GetAuthor(ctx context.Context, req *GetAuthorRequest) (*Author, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAuthor not implemented")
}

func RegisterBookstoreServer(s *grpc.Server, srv BookstoreServer) {
	s.RegisterService(&_Bookstore_serviceDesc, srv)
}

func _Bookstore_ListShelves_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookstoreServer).ListShelves(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.Bookstore/ListShelves",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookstoreServer).ListShelves(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bookstore_CreateShelf_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateShelfRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookstoreServer).CreateShelf(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.Bookstore/CreateShelf",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookstoreServer).CreateShelf(ctx, req.(*CreateShelfRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bookstore_BulkCreateShelf_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BookstoreServer).BulkCreateShelf(&bookstoreBulkCreateShelfServer{stream})
}

type Bookstore_BulkCreateShelfServer interface {
	Send(*Shelf) error
	Recv() (*CreateShelfRequest, error)
	grpc.ServerStream
}

type bookstoreBulkCreateShelfServer struct {
	grpc.ServerStream
}

func (x *bookstoreBulkCreateShelfServer) Send(m *Shelf) error {
	return x.ServerStream.SendMsg(m)
}

func (x *bookstoreBulkCreateShelfServer) Recv() (*CreateShelfRequest, error) {
	m := new(CreateShelfRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Bookstore_GetShelf_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShelfRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookstoreServer).GetShelf(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.Bookstore/GetShelf",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookstoreServer).GetShelf(ctx, req.(*GetShelfRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bookstore_DeleteShelf_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteShelfRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookstoreServer).DeleteShelf(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.Bookstore/DeleteShelf",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookstoreServer).DeleteShelf(ctx, req.(*DeleteShelfRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bookstore_ListBooks_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListBooksRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BookstoreServer).ListBooks(m, &bookstoreListBooksServer{stream})
}

type Bookstore_ListBooksServer interface {
	Send(*Book) error
	grpc.ServerStream
}

type bookstoreListBooksServer struct {
	grpc.ServerStream
}

func (x *bookstoreListBooksServer) Send(m *Book) error {
	return x.ServerStream.SendMsg(m)
}

func _Bookstore_CreateBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookstoreServer).CreateBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.Bookstore/CreateBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookstoreServer).CreateBook(ctx, req.(*CreateBookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bookstore_GetBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookstoreServer).GetBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.Bookstore/GetBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookstoreServer).GetBook(ctx, req.(*GetBookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bookstore_DeleteBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookstoreServer).DeleteBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.Bookstore/DeleteBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookstoreServer).DeleteBook(ctx, req.(*DeleteBookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bookstore_UpdateBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookstoreServer).UpdateBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.Bookstore/UpdateBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookstoreServer).UpdateBook(ctx, req.(*UpdateBookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bookstore_BookstoreOptions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShelfRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookstoreServer).BookstoreOptions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.Bookstore/BookstoreOptions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookstoreServer).BookstoreOptions(ctx, req.(*GetShelfRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bookstore_GetAuthor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAuthorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookstoreServer).GetAuthor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.Bookstore/GetAuthor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookstoreServer).GetAuthor(ctx, req.(*GetAuthorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Bookstore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.Bookstore",
	HandlerType: (*BookstoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListShelves",
			Handler:    _Bookstore_ListShelves_Handler,
		},
		{
			MethodName: "CreateShelf",
			Handler:    _Bookstore_CreateShelf_Handler,
		},
		{
			MethodName: "GetShelf",
			Handler:    _Bookstore_GetShelf_Handler,
		},
		{
			MethodName: "DeleteShelf",
			Handler:    _Bookstore_DeleteShelf_Handler,
		},
		{
			MethodName: "CreateBook",
			Handler:    _Bookstore_CreateBook_Handler,
		},
		{
			MethodName: "GetBook",
			Handler:    _Bookstore_GetBook_Handler,
		},
		{
			MethodName: "DeleteBook",
			Handler:    _Bookstore_DeleteBook_Handler,
		},
		{
			MethodName: "UpdateBook",
			Handler:    _Bookstore_UpdateBook_Handler,
		},
		{
			MethodName: "BookstoreOptions",
			Handler:    _Bookstore_BookstoreOptions_Handler,
		},
		{
			MethodName: "GetAuthor",
			Handler:    _Bookstore_GetAuthor_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "BulkCreateShelf",
			Handler:       _Bookstore_BulkCreateShelf_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "ListBooks",
			Handler:       _Bookstore_ListBooks_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "bookstore.proto",
}
