{{- if .Values.gateway.updateValues -}}
{{- include "gloo.updatevalues" . -}}
{{- end -}}
{{- if .Values.gateway.enabled }}
{{- $global := .Values.global }}
{{- $isUpgrade := .Values.gateway.upgrade }}
{{- range $name, $spec := .Values.gatewayProxies }}
{{- $image := $spec.podTemplate.image }}
{{- if $global }}
{{- $image = merge $spec.podTemplate.image $global.image }}
{{- end }}
{{- $statsConfig := coalesce $spec.stats $global.glooStats }}
---
{{- if not $spec.disabled }}
apiVersion: apps/v1
{{- if $spec.kind.deployment}}
kind: Deployment
{{- else }}
kind: DaemonSet
{{- end}}
metadata:
  labels:
    app: gloo
    gloo: gateway-proxy
    gateway-proxy-id: {{ $name | kebabcase }}
  name: {{ $name | kebabcase }}
  namespace: {{ $.Release.Namespace }}
spec:
  {{- if $spec.kind.deployment}}
  {{- if $spec.kind.deployment.replicas}}
  replicas: {{ $spec.kind.deployment.replicas }}
  {{- end}}
  {{- end}}
  selector:
    matchLabels:
      gloo: gateway-proxy
      gateway-proxy-id: {{ $name | kebabcase }}
  template:
    metadata:
      labels:
        gloo: gateway-proxy
        gateway-proxy-id: {{ $name | kebabcase }}
        {{- if not $isUpgrade }}
        gateway-proxy: live
        {{- end }}
        {{- if $spec.podTemplate.extraGatewayProxyLabels }}
        {{- range $key, $value := $spec.podTemplate.extraGatewayProxyLabels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
{{ $annotationExist := false}}
{{- if $spec.podTemplate.extraAnnotations }}
{{ $annotationExist = true}}
      annotations:
      {{- range $key, $value := $spec.podTemplate.extraAnnotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
{{- end }}
{{- if $statsConfig.enabled }}
{{- if not $annotationExist }}
{{- $annotationExist = true}}
      annotations:
{{- end}}
        prometheus.io/path: /metrics
        prometheus.io/port: "8081"
        prometheus.io/scrape: "true"
{{- end}}
{{- if $spec.readConfig }}
{{- if not $annotationExist }}
      annotations:
{{- end}}
        readconfig-stats: /stats
        readconfig-ready: /ready
        readconfig-config_dump: /config_dump
        readconfig-port: "8082"
{{- end}}
    spec:

{{- if $spec.podTemplate.runUnprivileged }}
      securityContext:
        fsGroup: {{ printf "%.0f" (float64 $spec.podTemplate.fsGroup) }}
        {{- if not $spec.podTemplate.floatingUserId }}
        runAsUser: {{ printf "%.0f" (float64 $spec.podTemplate.runAsUser) -}}
        {{- end}}
{{- end}}
{{- if $spec.kind.deployment }}
{{- if $spec.antiAffinity }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  gloo: gateway-proxy
              topologyKey: kubernetes.io/hostname
{{- end}}
{{- end}}
      serviceAccountName: gateway-proxy
      {{- if $spec.extraInitContainersHelper }}
      initContainers:
      {{- include $spec.extraInitContainersHelper $ | nindent 6 }}
      {{- end }}
      containers:
      - args:
          - --disable-hot-restart
          {{- with $spec.extraEnvoyArgs}}
            {{- range . }}
          - {{ . | quote }}
            {{- end }}
          {{- end}}
        env:
{{- if $spec.kind.deployment }}
{{- if $spec.kind.deployment.customEnv }}
{{ toYaml $spec.kind.deployment.customEnv | indent 8 }}
{{- end }}
{{- end }}
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        {{- if not $global.wasm.enabled }}
        image: {{ template "gloo.image" $image }}
        {{- else }}
        image: {{ template "gloo.wasmImage" $image }}
        {{- end}}
        imagePullPolicy: {{ $image.pullPolicy }}
        {{- if $spec.podTemplate.gracefulShutdown }}
        {{- if $spec.podTemplate.gracefulShutdown.enabled }}
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - wget --post-data "" -O /dev/null {{ $spec.loopBackAddress }}:19000/healthcheck/fail;
                sleep {{ $spec.podTemplate.gracefulShutdown.sleepTimeSeconds }}
        {{- end}}
        {{- end}}
        name: {{ $name | kebabcase }}
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          {{- if $spec.podTemplate.runUnprivileged }}
          runAsNonRoot: true
          {{- if not $spec.podTemplate.floatingUserId }}
          runAsUser: {{ printf "%.0f" (float64 $spec.podTemplate.runAsUser) -}}
          {{- end }}
          {{- end}}
          capabilities:
            drop:
            - ALL
          {{- if not $spec.podTemplate.disableNetBind }}
            add:
            - NET_BIND_SERVICE
          {{- end}}
        ports:
        - containerPort: {{ $spec.podTemplate.httpPort }}
          name: http
          protocol: TCP
          {{- if $spec.kind.daemonSet }}
          {{- if $spec.kind.daemonSet.hostPort}}
          hostPort: {{ $spec.podTemplate.httpPort }}
          {{- end}}
          {{- end}}
        - containerPort: {{ $spec.podTemplate.httpsPort }}
          name: https
          protocol: TCP
          {{- if  $spec.kind.daemonSet }}
          {{- if $spec.kind.daemonSet.hostPort}}
          hostPort: {{ $spec.podTemplate.httpsPort }}
          {{- end}}
          {{- end}}
{{- with $spec.podTemplate.extraPorts }}
{{toYaml . | indent 8}}{{- end }}
{{- if $spec.podTemplate.resources }}
        resources:
{{ toYaml $spec.podTemplate.resources | indent 10}}
{{- end}}
{{- if $spec.podTemplate.probes }}
        readinessProbe:
{{- if $spec.podTemplate.customReadinessProbe }}
{{ toYaml $spec.podTemplate.customReadinessProbe | indent 10}}
{{- else }}
          exec:
            command:
            - wget
            - -O
            - /dev/null
            - {{ $spec.loopBackAddress }}:19000/ready
          initialDelaySeconds: 1
          periodSeconds: 10
          failureThreshold: 10
{{- end}}
        livenessProbe:
          exec:
            command:
            - wget
            - -O
            - /dev/null
            - {{ $spec.loopBackAddress }}:19000/server_info
          initialDelaySeconds: 1
          periodSeconds: 10
          failureThreshold: 10
{{- end}}
        volumeMounts:
        - mountPath: /etc/envoy
          name: envoy-config
{{- if $spec.extraProxyVolumeMountHelper }}
{{- include $spec.extraProxyVolumeMountHelper $ | nindent 8 }}
{{- end }}
{{- if $global.glooMtls.enabled }}
        - mountPath: /etc/envoy/ssl
          name: gloo-mtls-certs
          readOnly: true
{{- end}} # $global.glooMtls.enabled
{{- if $spec.extraContainersHelper }}
        - mountPath: /usr/share/shared-data
          name: shared-data
{{- include $spec.extraContainersHelper $ | nindent 6 }}
{{- end }} # $spec.extraContainersHelper
{{- if or $global.glooMtls.enabled $global.istioSDS.enabled }}
      {{- $sdsImage := merge $global.glooMtls.sds.image $global.image }}
      - name: sds
        image: {{ template "gloo.image" $sdsImage }}
        imagePullPolicy: {{ $sdsImage.pullPolicy }}
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
{{- if $global.glooMtls.enabled }}
          - name: GLOO_MTLS_SDS_ENABLED
            value: "true"
{{- end }}
{{- if $global.istioSDS.enabled }}
          - name: ISTIO_MTLS_SDS_ENABLED
            value: "true"
{{- end }}
        volumeMounts:
{{- if $global.glooMtls.enabled }}
        - mountPath: /etc/envoy/ssl
          name: gloo-mtls-certs
          readOnly: true
{{- end }}
{{- if $global.istioSDS.enabled }}
        - mountPath: /etc/istio-certs/
          name: istio-certs
        - mountPath: /etc/envoy
          name: envoy-config
{{- end }}
        ports:
        - containerPort: 8234
          name: sds
          protocol: TCP
{{- end }} # $global.glooMtls.enabled or $.Values.istioSDS.enabled
      {{- if $spec.kind.daemonSet }}
      {{- if $spec.kind.daemonSet.hostPort}}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end}}
      {{- end}}
      {{- if $spec.podTemplate.nodeName }}
      nodeName: {{$spec.podTemplate.nodeName}}
      {{- end }}
      {{- if $spec.podTemplate.nodeSelector }}
      nodeSelector:
      {{- range $key, $value := $spec.podTemplate.nodeSelector }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- end }}
      {{- if $spec.podTemplate.tolerations }}
      tolerations:
{{ toYaml $spec.podTemplate.tolerations | indent 6}}
      {{- end }}
      {{- if $image.pullSecret }}
      imagePullSecrets:
        - name: {{ $image.pullSecret }}{{end}}
      {{- if $spec.podTemplate.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ $spec.podTemplate.terminationGracePeriodSeconds }}
      {{- end }}
{{- if $global.istioSDS.enabled }}
{{- if $global.istioSDS.customSidecars }}
{{ toYaml $global.istioSDS.customSidecars | indent 6}}
{{- end }}
{{- if not $global.istioSDS.customSidecars }}
      - name: istio-proxy
        image: docker.io/istio/proxyv2:1.6.8
        args:
        - proxy
        - sidecar
        - --domain
        - $(POD_NAMESPACE).svc.cluster.local
        - --configPath
        - /etc/istio/proxy
        - --binaryPath
        - /usr/local/bin/envoy
        - --serviceCluster
        - istio-proxy-prometheus
        - --drainDuration
        - 45s
        - --parentShutdownDuration
        - 1m0s
        - --discoveryAddress
        - istio-pilot.istio-system.svc:15012
        - --proxyLogLevel=warning
        - --proxyComponentLogLevel=misc:error
        - --connectTimeout
        - 10s
        - --proxyAdminPort
        - "15000"
        - --controlPlaneAuthPolicy
        - NONE
        - --dnsRefreshRate
        - 300s
        - --statusPort
        - "15021"
        - --trust-domain=cluster.local
        - --controlPlaneBootstrap=false
        env:
          - name: OUTPUT_CERTS
            value: "/etc/istio-certs"
          - name: JWT_POLICY
            value: third-party-jwt
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: CA_ADDR
            value: istiod.istio-system.svc:15012
          - name: ISTIO_META_MESH_ID
            value: cluster.local
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                fieldPath: spec.serviceAccountName
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: ISTIO_META_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: ISTIO_META_CONFIG_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
        imagePullPolicy: IfNotPresent
        readinessProbe:
          failureThreshold: 30
          httpGet:
            path: /healthz/ready
            port: 15021
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /var/run/secrets/istio
          name: istiod-ca-cert
        - mountPath: /etc/istio/proxy
          name: istio-envoy
        - mountPath: /etc/istio-certs/
          name: istio-certs
        - mountPath: /var/run/secrets/tokens
          name: istio-token 
{{- end}}
{{- end}}
      volumes:
      - configMap:
          name: {{ $name | kebabcase }}-envoy-config
        name: envoy-config
{{- if $global.istioSDS.enabled }}
      - name: istio-certs
        emptyDir:
          medium: Memory
      - name: istiod-ca-cert
        configMap:
          defaultMode: 420
          name: istio-ca-root-cert
      - emptyDir:
          medium: Memory
        name: istio-envoy
      - name: istio-token
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              audience: istio-ca
              expirationSeconds: 43200
              path: istio-token
{{- end}}

{{- if $global.glooMtls.enabled }}
      - name: gloo-mtls-certs
        secret:
          defaultMode: 420
          secretName: gloo-mtls-certs
{{- end }}
      {{- if $spec.extraContainersHelper }}
      - name: shared-data
        emptyDir: {}
      {{- end }}
      {{- if $spec.extraVolumeHelper }}
      {{- include $spec.extraVolumeHelper $ | nindent 6 }}
      {{- end }}
{{- end }}
{{- end }}
{{- end }}
