// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/gloo/projects/gloo/api/external/envoy/config/core/v3/event_service_config.proto

package v3

import (
	bytes "bytes"
	fmt "fmt"
	math "math"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/solo-io/gloo/projects/gloo/pkg/api/external/udpa/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// [#not-implemented-hide:]
// Configuration of the event reporting service endpoint.
type EventServiceConfig struct {
	// Types that are valid to be assigned to ConfigSourceSpecifier:
	//	*EventServiceConfig_GrpcService
	ConfigSourceSpecifier isEventServiceConfig_ConfigSourceSpecifier `protobuf_oneof:"config_source_specifier"`
	XXX_NoUnkeyedLiteral  struct{}                                   `json:"-"`
	XXX_unrecognized      []byte                                     `json:"-"`
	XXX_sizecache         int32                                      `json:"-"`
}

func (m *EventServiceConfig) Reset()         { *m = EventServiceConfig{} }
func (m *EventServiceConfig) String() string { return proto.CompactTextString(m) }
func (*EventServiceConfig) ProtoMessage()    {}
func (*EventServiceConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f2fc7138363c06b, []int{0}
}
func (m *EventServiceConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventServiceConfig.Unmarshal(m, b)
}
func (m *EventServiceConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventServiceConfig.Marshal(b, m, deterministic)
}
func (m *EventServiceConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventServiceConfig.Merge(m, src)
}
func (m *EventServiceConfig) XXX_Size() int {
	return xxx_messageInfo_EventServiceConfig.Size(m)
}
func (m *EventServiceConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_EventServiceConfig.DiscardUnknown(m)
}

var xxx_messageInfo_EventServiceConfig proto.InternalMessageInfo

type isEventServiceConfig_ConfigSourceSpecifier interface {
	isEventServiceConfig_ConfigSourceSpecifier()
	Equal(interface{}) bool
}

type EventServiceConfig_GrpcService struct {
	GrpcService *GrpcService `protobuf:"bytes,1,opt,name=grpc_service,json=grpcService,proto3,oneof" json:"grpc_service,omitempty"`
}

func (*EventServiceConfig_GrpcService) isEventServiceConfig_ConfigSourceSpecifier() {}

func (m *EventServiceConfig) GetConfigSourceSpecifier() isEventServiceConfig_ConfigSourceSpecifier {
	if m != nil {
		return m.ConfigSourceSpecifier
	}
	return nil
}

func (m *EventServiceConfig) GetGrpcService() *GrpcService {
	if x, ok := m.GetConfigSourceSpecifier().(*EventServiceConfig_GrpcService); ok {
		return x.GrpcService
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*EventServiceConfig) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*EventServiceConfig_GrpcService)(nil),
	}
}

func init() {
	proto.RegisterType((*EventServiceConfig)(nil), "envoy.config.core.v3.EventServiceConfig")
}

func init() {
	proto.RegisterFile("github.com/solo-io/gloo/projects/gloo/api/external/envoy/config/core/v3/event_service_config.proto", fileDescriptor_7f2fc7138363c06b)
}

var fileDescriptor_7f2fc7138363c06b = []byte{
	// 346 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xcf, 0x4a, 0x03, 0x31,
	0x10, 0xc6, 0xdd, 0x0a, 0x3d, 0x6c, 0x3d, 0xc8, 0x52, 0xa8, 0x14, 0x2c, 0xb6, 0x88, 0x0a, 0xe2,
	0x06, 0xda, 0x9b, 0xc7, 0x15, 0xff, 0x80, 0x97, 0xa2, 0x37, 0x2f, 0x4b, 0x9a, 0x4e, 0x63, 0x74,
	0xcd, 0x84, 0x24, 0x1b, 0xda, 0x9b, 0x47, 0x1f, 0x41, 0x7c, 0x02, 0x7d, 0x05, 0xef, 0x82, 0x57,
	0x5f, 0xc1, 0xa7, 0xf0, 0x28, 0xbb, 0xd9, 0xa2, 0xd0, 0x82, 0xde, 0x26, 0xf3, 0xf1, 0xcd, 0xfc,
	0xbe, 0x30, 0xe1, 0x88, 0x0b, 0x7b, 0x9d, 0x8f, 0x62, 0x86, 0x77, 0xc4, 0x60, 0x86, 0x07, 0x02,
	0x09, 0xcf, 0x10, 0x89, 0xd2, 0x78, 0x03, 0xcc, 0x1a, 0xff, 0xa2, 0x4a, 0x10, 0x98, 0x5a, 0xd0,
	0x92, 0x66, 0x04, 0xa4, 0xc3, 0x19, 0x61, 0x28, 0x27, 0x82, 0x13, 0x86, 0x1a, 0x88, 0x1b, 0x10,
	0x70, 0x20, 0x6d, 0x6a, 0x40, 0x3b, 0xc1, 0x20, 0xf5, 0x62, 0xac, 0x34, 0x5a, 0x8c, 0x9a, 0xa5,
	0x21, 0xae, 0x7a, 0x85, 0x21, 0x76, 0x83, 0xf6, 0xee, 0xd2, 0x31, 0x5c, 0x2b, 0x36, 0x9f, 0xe2,
	0xed, 0xed, 0xcd, 0x7c, 0xac, 0x28, 0xa1, 0x52, 0xa2, 0xa5, 0x56, 0xa0, 0x34, 0xc4, 0x58, 0x6a,
	0x73, 0x53, 0xc9, 0xdd, 0x05, 0xd9, 0x81, 0x36, 0x02, 0xa5, 0x90, 0x15, 0x40, 0xbb, 0xe5, 0x68,
	0x26, 0xc6, 0xd4, 0x02, 0x99, 0x17, 0x95, 0xd0, 0xe4, 0xc8, 0xb1, 0x2c, 0x49, 0x51, 0xf9, 0x6e,
	0xef, 0x25, 0x08, 0xa3, 0xe3, 0x22, 0xce, 0xa5, 0xe7, 0x38, 0x2a, 0x11, 0xa3, 0x93, 0x70, 0xed,
	0x37, 0xdd, 0x46, 0xb0, 0x15, 0xec, 0x35, 0xfa, 0xdd, 0x78, 0x59, 0xba, 0xf8, 0x54, 0x2b, 0x56,
	0xd9, 0xcf, 0x56, 0x2e, 0x1a, 0xfc, 0xe7, 0x79, 0xb8, 0xff, 0xf4, 0xf6, 0xd0, 0xd9, 0x09, 0xb7,
	0xbd, 0x8f, 0x2a, 0x11, 0xbb, 0xbe, 0xf7, 0x2d, 0x2e, 0x4d, 0x3a, 0x61, 0xcb, 0x4f, 0x4e, 0x0d,
	0xe6, 0x9a, 0x41, 0x6a, 0x14, 0x30, 0x31, 0x11, 0xa0, 0xa3, 0xd5, 0xaf, 0x24, 0x48, 0x1e, 0x83,
	0xe7, 0xcf, 0x4e, 0xf0, 0x7a, 0xff, 0xfe, 0x51, 0xaf, 0xad, 0xd7, 0xc2, 0x9e, 0x40, 0xcf, 0xa3,
	0x34, 0x4e, 0x67, 0x4b, 0xd1, 0x92, 0xd6, 0xe2, 0x9a, 0x61, 0x91, 0x7b, 0x18, 0x5c, 0x9d, 0xff,
	0xef, 0x1a, 0xd4, 0x2d, 0xff, 0xfb, 0x22, 0x46, 0xf5, 0xf2, 0x37, 0x07, 0xdf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xc5, 0x3b, 0x4f, 0x7b, 0x63, 0x02, 0x00, 0x00,
}

func (this *EventServiceConfig) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*EventServiceConfig)
	if !ok {
		that2, ok := that.(EventServiceConfig)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if that1.ConfigSourceSpecifier == nil {
		if this.ConfigSourceSpecifier != nil {
			return false
		}
	} else if this.ConfigSourceSpecifier == nil {
		return false
	} else if !this.ConfigSourceSpecifier.Equal(that1.ConfigSourceSpecifier) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *EventServiceConfig_GrpcService) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*EventServiceConfig_GrpcService)
	if !ok {
		that2, ok := that.(EventServiceConfig_GrpcService)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.GrpcService.Equal(that1.GrpcService) {
		return false
	}
	return true
}
