// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: github.com/solo-io/gloo/projects/gloo/api/grpc/validation/proxy_validation.proto

package validation

import (
	context "context"
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	v1 "github.com/solo-io/gloo/projects/gloo/pkg/api/v1"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ListenerReport_Error_Type int32

const (
	ListenerReport_Error_NameNotUniqueError     ListenerReport_Error_Type = 0
	ListenerReport_Error_BindPortNotUniqueError ListenerReport_Error_Type = 1
	ListenerReport_Error_SSLConfigError         ListenerReport_Error_Type = 2
	ListenerReport_Error_ProcessingError        ListenerReport_Error_Type = 3
)

// Enum value maps for ListenerReport_Error_Type.
var (
	ListenerReport_Error_Type_name = map[int32]string{
		0: "NameNotUniqueError",
		1: "BindPortNotUniqueError",
		2: "SSLConfigError",
		3: "ProcessingError",
	}
	ListenerReport_Error_Type_value = map[string]int32{
		"NameNotUniqueError":     0,
		"BindPortNotUniqueError": 1,
		"SSLConfigError":         2,
		"ProcessingError":        3,
	}
)

func (x ListenerReport_Error_Type) Enum() *ListenerReport_Error_Type {
	p := new(ListenerReport_Error_Type)
	*p = x
	return p
}

func (x ListenerReport_Error_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListenerReport_Error_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_enumTypes[0].Descriptor()
}

func (ListenerReport_Error_Type) Type() protoreflect.EnumType {
	return &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_enumTypes[0]
}

func (x ListenerReport_Error_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListenerReport_Error_Type.Descriptor instead.
func (ListenerReport_Error_Type) EnumDescriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescGZIP(), []int{5, 0, 0}
}

type HttpListenerReport_Error_Type int32

const (
	HttpListenerReport_Error_ProcessingError HttpListenerReport_Error_Type = 0
)

// Enum value maps for HttpListenerReport_Error_Type.
var (
	HttpListenerReport_Error_Type_name = map[int32]string{
		0: "ProcessingError",
	}
	HttpListenerReport_Error_Type_value = map[string]int32{
		"ProcessingError": 0,
	}
)

func (x HttpListenerReport_Error_Type) Enum() *HttpListenerReport_Error_Type {
	p := new(HttpListenerReport_Error_Type)
	*p = x
	return p
}

func (x HttpListenerReport_Error_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HttpListenerReport_Error_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_enumTypes[1].Descriptor()
}

func (HttpListenerReport_Error_Type) Type() protoreflect.EnumType {
	return &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_enumTypes[1]
}

func (x HttpListenerReport_Error_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HttpListenerReport_Error_Type.Descriptor instead.
func (HttpListenerReport_Error_Type) EnumDescriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescGZIP(), []int{6, 0, 0}
}

type VirtualHostReport_Error_Type int32

const (
	VirtualHostReport_Error_NameNotUniqueError    VirtualHostReport_Error_Type = 0
	VirtualHostReport_Error_DomainsNotUniqueError VirtualHostReport_Error_Type = 1
	VirtualHostReport_Error_ProcessingError       VirtualHostReport_Error_Type = 2
	VirtualHostReport_Error_EmptyDomainError      VirtualHostReport_Error_Type = 3
)

// Enum value maps for VirtualHostReport_Error_Type.
var (
	VirtualHostReport_Error_Type_name = map[int32]string{
		0: "NameNotUniqueError",
		1: "DomainsNotUniqueError",
		2: "ProcessingError",
		3: "EmptyDomainError",
	}
	VirtualHostReport_Error_Type_value = map[string]int32{
		"NameNotUniqueError":    0,
		"DomainsNotUniqueError": 1,
		"ProcessingError":       2,
		"EmptyDomainError":      3,
	}
)

func (x VirtualHostReport_Error_Type) Enum() *VirtualHostReport_Error_Type {
	p := new(VirtualHostReport_Error_Type)
	*p = x
	return p
}

func (x VirtualHostReport_Error_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VirtualHostReport_Error_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_enumTypes[2].Descriptor()
}

func (VirtualHostReport_Error_Type) Type() protoreflect.EnumType {
	return &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_enumTypes[2]
}

func (x VirtualHostReport_Error_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VirtualHostReport_Error_Type.Descriptor instead.
func (VirtualHostReport_Error_Type) EnumDescriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescGZIP(), []int{7, 0, 0}
}

type RouteReport_Error_Type int32

const (
	RouteReport_Error_InvalidMatcherError RouteReport_Error_Type = 0
	RouteReport_Error_ProcessingError     RouteReport_Error_Type = 1
)

// Enum value maps for RouteReport_Error_Type.
var (
	RouteReport_Error_Type_name = map[int32]string{
		0: "InvalidMatcherError",
		1: "ProcessingError",
	}
	RouteReport_Error_Type_value = map[string]int32{
		"InvalidMatcherError": 0,
		"ProcessingError":     1,
	}
)

func (x RouteReport_Error_Type) Enum() *RouteReport_Error_Type {
	p := new(RouteReport_Error_Type)
	*p = x
	return p
}

func (x RouteReport_Error_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RouteReport_Error_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_enumTypes[3].Descriptor()
}

func (RouteReport_Error_Type) Type() protoreflect.EnumType {
	return &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_enumTypes[3]
}

func (x RouteReport_Error_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RouteReport_Error_Type.Descriptor instead.
func (RouteReport_Error_Type) EnumDescriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescGZIP(), []int{8, 0, 0}
}

type RouteReport_Warning_Type int32

const (
	RouteReport_Warning_InvalidDestinationWarning RouteReport_Warning_Type = 0
)

// Enum value maps for RouteReport_Warning_Type.
var (
	RouteReport_Warning_Type_name = map[int32]string{
		0: "InvalidDestinationWarning",
	}
	RouteReport_Warning_Type_value = map[string]int32{
		"InvalidDestinationWarning": 0,
	}
)

func (x RouteReport_Warning_Type) Enum() *RouteReport_Warning_Type {
	p := new(RouteReport_Warning_Type)
	*p = x
	return p
}

func (x RouteReport_Warning_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RouteReport_Warning_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_enumTypes[4].Descriptor()
}

func (RouteReport_Warning_Type) Type() protoreflect.EnumType {
	return &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_enumTypes[4]
}

func (x RouteReport_Warning_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RouteReport_Warning_Type.Descriptor instead.
func (RouteReport_Warning_Type) EnumDescriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescGZIP(), []int{8, 1, 0}
}

type TcpListenerReport_Error_Type int32

const (
	TcpListenerReport_Error_NameNotUniqueError     TcpListenerReport_Error_Type = 0
	TcpListenerReport_Error_BindPortNotUniqueError TcpListenerReport_Error_Type = 1
	TcpListenerReport_Error_SSLConfigError         TcpListenerReport_Error_Type = 2
	TcpListenerReport_Error_ProcessingError        TcpListenerReport_Error_Type = 3
)

// Enum value maps for TcpListenerReport_Error_Type.
var (
	TcpListenerReport_Error_Type_name = map[int32]string{
		0: "NameNotUniqueError",
		1: "BindPortNotUniqueError",
		2: "SSLConfigError",
		3: "ProcessingError",
	}
	TcpListenerReport_Error_Type_value = map[string]int32{
		"NameNotUniqueError":     0,
		"BindPortNotUniqueError": 1,
		"SSLConfigError":         2,
		"ProcessingError":        3,
	}
)

func (x TcpListenerReport_Error_Type) Enum() *TcpListenerReport_Error_Type {
	p := new(TcpListenerReport_Error_Type)
	*p = x
	return p
}

func (x TcpListenerReport_Error_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TcpListenerReport_Error_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_enumTypes[5].Descriptor()
}

func (TcpListenerReport_Error_Type) Type() protoreflect.EnumType {
	return &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_enumTypes[5]
}

func (x TcpListenerReport_Error_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TcpListenerReport_Error_Type.Descriptor instead.
func (TcpListenerReport_Error_Type) EnumDescriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescGZIP(), []int{9, 0, 0}
}

type TcpHostReport_Error_Type int32

const (
	TcpHostReport_Error_NameNotUniqueError      TcpHostReport_Error_Type = 0
	TcpHostReport_Error_InvalidDestinationError TcpHostReport_Error_Type = 1
	TcpHostReport_Error_ProcessingError         TcpHostReport_Error_Type = 2
)

// Enum value maps for TcpHostReport_Error_Type.
var (
	TcpHostReport_Error_Type_name = map[int32]string{
		0: "NameNotUniqueError",
		1: "InvalidDestinationError",
		2: "ProcessingError",
	}
	TcpHostReport_Error_Type_value = map[string]int32{
		"NameNotUniqueError":      0,
		"InvalidDestinationError": 1,
		"ProcessingError":         2,
	}
)

func (x TcpHostReport_Error_Type) Enum() *TcpHostReport_Error_Type {
	p := new(TcpHostReport_Error_Type)
	*p = x
	return p
}

func (x TcpHostReport_Error_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TcpHostReport_Error_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_enumTypes[6].Descriptor()
}

func (TcpHostReport_Error_Type) Type() protoreflect.EnumType {
	return &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_enumTypes[6]
}

func (x TcpHostReport_Error_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TcpHostReport_Error_Type.Descriptor instead.
func (TcpHostReport_Error_Type) EnumDescriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescGZIP(), []int{10, 0, 0}
}

type ProxyValidationServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proxy *v1.Proxy `protobuf:"bytes,1,opt,name=proxy,proto3" json:"proxy,omitempty"`
}

func (x *ProxyValidationServiceRequest) Reset() {
	*x = ProxyValidationServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyValidationServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyValidationServiceRequest) ProtoMessage() {}

func (x *ProxyValidationServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyValidationServiceRequest.ProtoReflect.Descriptor instead.
func (*ProxyValidationServiceRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescGZIP(), []int{0}
}

func (x *ProxyValidationServiceRequest) GetProxy() *v1.Proxy {
	if x != nil {
		return x.Proxy
	}
	return nil
}

type ProxyValidationServiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProxyReport *ProxyReport `protobuf:"bytes,1,opt,name=proxy_report,json=proxyReport,proto3" json:"proxy_report,omitempty"`
}

func (x *ProxyValidationServiceResponse) Reset() {
	*x = ProxyValidationServiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyValidationServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyValidationServiceResponse) ProtoMessage() {}

func (x *ProxyValidationServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyValidationServiceResponse.ProtoReflect.Descriptor instead.
func (*ProxyValidationServiceResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescGZIP(), []int{1}
}

func (x *ProxyValidationServiceResponse) GetProxyReport() *ProxyReport {
	if x != nil {
		return x.ProxyReport
	}
	return nil
}

type NotifyOnResyncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NotifyOnResyncRequest) Reset() {
	*x = NotifyOnResyncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyOnResyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyOnResyncRequest) ProtoMessage() {}

func (x *NotifyOnResyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyOnResyncRequest.ProtoReflect.Descriptor instead.
func (*NotifyOnResyncRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescGZIP(), []int{2}
}

type NotifyOnResyncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NotifyOnResyncResponse) Reset() {
	*x = NotifyOnResyncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyOnResyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyOnResyncResponse) ProtoMessage() {}

func (x *NotifyOnResyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyOnResyncResponse.ProtoReflect.Descriptor instead.
func (*NotifyOnResyncResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescGZIP(), []int{3}
}

//
// The Proxy Report should contain one report for each sub-resource of the Proxy
// E.g., each listener will have a corresponding report. Within each listener report is
// a route report corresponding to each route on the listener.
//
// If the report contains no errors, the (sub-)resource is valid.
type ProxyReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenerReports []*ListenerReport `protobuf:"bytes,1,rep,name=listener_reports,json=listenerReports,proto3" json:"listener_reports,omitempty"`
}

func (x *ProxyReport) Reset() {
	*x = ProxyReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyReport) ProtoMessage() {}

func (x *ProxyReport) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyReport.ProtoReflect.Descriptor instead.
func (*ProxyReport) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescGZIP(), []int{4}
}

func (x *ProxyReport) GetListenerReports() []*ListenerReport {
	if x != nil {
		return x.ListenerReports
	}
	return nil
}

type ListenerReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// errors on top-level config of the listener
	Errors []*ListenerReport_Error `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	// Types that are assignable to ListenerTypeReport:
	//	*ListenerReport_HttpListenerReport
	//	*ListenerReport_TcpListenerReport
	ListenerTypeReport isListenerReport_ListenerTypeReport `protobuf_oneof:"listener_type_report"`
}

func (x *ListenerReport) Reset() {
	*x = ListenerReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenerReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenerReport) ProtoMessage() {}

func (x *ListenerReport) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenerReport.ProtoReflect.Descriptor instead.
func (*ListenerReport) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescGZIP(), []int{5}
}

func (x *ListenerReport) GetErrors() []*ListenerReport_Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (m *ListenerReport) GetListenerTypeReport() isListenerReport_ListenerTypeReport {
	if m != nil {
		return m.ListenerTypeReport
	}
	return nil
}

func (x *ListenerReport) GetHttpListenerReport() *HttpListenerReport {
	if x, ok := x.GetListenerTypeReport().(*ListenerReport_HttpListenerReport); ok {
		return x.HttpListenerReport
	}
	return nil
}

func (x *ListenerReport) GetTcpListenerReport() *TcpListenerReport {
	if x, ok := x.GetListenerTypeReport().(*ListenerReport_TcpListenerReport); ok {
		return x.TcpListenerReport
	}
	return nil
}

type isListenerReport_ListenerTypeReport interface {
	isListenerReport_ListenerTypeReport()
}

type ListenerReport_HttpListenerReport struct {
	// report for the http listener
	HttpListenerReport *HttpListenerReport `protobuf:"bytes,3,opt,name=http_listener_report,json=httpListenerReport,proto3,oneof"`
}

type ListenerReport_TcpListenerReport struct {
	// report for the tcp listener
	TcpListenerReport *TcpListenerReport `protobuf:"bytes,4,opt,name=tcp_listener_report,json=tcpListenerReport,proto3,oneof"`
}

func (*ListenerReport_HttpListenerReport) isListenerReport_ListenerTypeReport() {}

func (*ListenerReport_TcpListenerReport) isListenerReport_ListenerTypeReport() {}

type HttpListenerReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errors []*HttpListenerReport_Error `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
	// report for nested virtual hosts
	VirtualHostReports []*VirtualHostReport `protobuf:"bytes,2,rep,name=virtual_host_reports,json=virtualHostReports,proto3" json:"virtual_host_reports,omitempty"`
}

func (x *HttpListenerReport) Reset() {
	*x = HttpListenerReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpListenerReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpListenerReport) ProtoMessage() {}

func (x *HttpListenerReport) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpListenerReport.ProtoReflect.Descriptor instead.
func (*HttpListenerReport) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescGZIP(), []int{6}
}

func (x *HttpListenerReport) GetErrors() []*HttpListenerReport_Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *HttpListenerReport) GetVirtualHostReports() []*VirtualHostReport {
	if x != nil {
		return x.VirtualHostReports
	}
	return nil
}

type VirtualHostReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// errors on top-level config of the virtual host
	Errors       []*VirtualHostReport_Error `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
	RouteReports []*RouteReport             `protobuf:"bytes,2,rep,name=route_reports,json=routeReports,proto3" json:"route_reports,omitempty"`
}

func (x *VirtualHostReport) Reset() {
	*x = VirtualHostReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualHostReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualHostReport) ProtoMessage() {}

func (x *VirtualHostReport) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualHostReport.ProtoReflect.Descriptor instead.
func (*VirtualHostReport) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescGZIP(), []int{7}
}

func (x *VirtualHostReport) GetErrors() []*VirtualHostReport_Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *VirtualHostReport) GetRouteReports() []*RouteReport {
	if x != nil {
		return x.RouteReports
	}
	return nil
}

type RouteReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// errors on the config of the route
	Errors []*RouteReport_Error `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
	// warnings on the config of the route
	Warnings []*RouteReport_Warning `protobuf:"bytes,2,rep,name=warnings,proto3" json:"warnings,omitempty"`
}

func (x *RouteReport) Reset() {
	*x = RouteReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteReport) ProtoMessage() {}

func (x *RouteReport) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteReport.ProtoReflect.Descriptor instead.
func (*RouteReport) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescGZIP(), []int{8}
}

func (x *RouteReport) GetErrors() []*RouteReport_Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *RouteReport) GetWarnings() []*RouteReport_Warning {
	if x != nil {
		return x.Warnings
	}
	return nil
}

type TcpListenerReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// errors on top-level config of the listener
	Errors         []*TcpListenerReport_Error `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
	TcpHostReports []*TcpHostReport           `protobuf:"bytes,2,rep,name=tcp_host_reports,json=tcpHostReports,proto3" json:"tcp_host_reports,omitempty"`
}

func (x *TcpListenerReport) Reset() {
	*x = TcpListenerReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TcpListenerReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TcpListenerReport) ProtoMessage() {}

func (x *TcpListenerReport) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TcpListenerReport.ProtoReflect.Descriptor instead.
func (*TcpListenerReport) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescGZIP(), []int{9}
}

func (x *TcpListenerReport) GetErrors() []*TcpListenerReport_Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *TcpListenerReport) GetTcpHostReports() []*TcpHostReport {
	if x != nil {
		return x.TcpHostReports
	}
	return nil
}

type TcpHostReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// errors on the tcp host
	Errors []*TcpHostReport_Error `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *TcpHostReport) Reset() {
	*x = TcpHostReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TcpHostReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TcpHostReport) ProtoMessage() {}

func (x *TcpHostReport) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TcpHostReport.ProtoReflect.Descriptor instead.
func (*TcpHostReport) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescGZIP(), []int{10}
}

func (x *TcpHostReport) GetErrors() []*TcpHostReport_Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

// error types for top-level listener config
type ListenerReport_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the type of the error
	Type ListenerReport_Error_Type `protobuf:"varint,1,opt,name=type,proto3,enum=gloo.solo.io.ListenerReport_Error_Type" json:"type,omitempty"`
	// any extra info as a string
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *ListenerReport_Error) Reset() {
	*x = ListenerReport_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenerReport_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenerReport_Error) ProtoMessage() {}

func (x *ListenerReport_Error) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenerReport_Error.ProtoReflect.Descriptor instead.
func (*ListenerReport_Error) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ListenerReport_Error) GetType() ListenerReport_Error_Type {
	if x != nil {
		return x.Type
	}
	return ListenerReport_Error_NameNotUniqueError
}

func (x *ListenerReport_Error) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// error types for top-level http listener config
type HttpListenerReport_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the type of the error
	Type HttpListenerReport_Error_Type `protobuf:"varint,1,opt,name=type,proto3,enum=gloo.solo.io.HttpListenerReport_Error_Type" json:"type,omitempty"`
	// any extra info as a string
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *HttpListenerReport_Error) Reset() {
	*x = HttpListenerReport_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpListenerReport_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpListenerReport_Error) ProtoMessage() {}

func (x *HttpListenerReport_Error) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpListenerReport_Error.ProtoReflect.Descriptor instead.
func (*HttpListenerReport_Error) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescGZIP(), []int{6, 0}
}

func (x *HttpListenerReport_Error) GetType() HttpListenerReport_Error_Type {
	if x != nil {
		return x.Type
	}
	return HttpListenerReport_Error_ProcessingError
}

func (x *HttpListenerReport_Error) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// error types for top-level virtual host config
type VirtualHostReport_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the type of the error
	Type VirtualHostReport_Error_Type `protobuf:"varint,1,opt,name=type,proto3,enum=gloo.solo.io.VirtualHostReport_Error_Type" json:"type,omitempty"`
	// any extra info as a string
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *VirtualHostReport_Error) Reset() {
	*x = VirtualHostReport_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VirtualHostReport_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualHostReport_Error) ProtoMessage() {}

func (x *VirtualHostReport_Error) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualHostReport_Error.ProtoReflect.Descriptor instead.
func (*VirtualHostReport_Error) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescGZIP(), []int{7, 0}
}

func (x *VirtualHostReport_Error) GetType() VirtualHostReport_Error_Type {
	if x != nil {
		return x.Type
	}
	return VirtualHostReport_Error_NameNotUniqueError
}

func (x *VirtualHostReport_Error) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// error types for the given route config
type RouteReport_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the type of the error
	Type RouteReport_Error_Type `protobuf:"varint,1,opt,name=type,proto3,enum=gloo.solo.io.RouteReport_Error_Type" json:"type,omitempty"`
	// any extra info as a string
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *RouteReport_Error) Reset() {
	*x = RouteReport_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteReport_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteReport_Error) ProtoMessage() {}

func (x *RouteReport_Error) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteReport_Error.ProtoReflect.Descriptor instead.
func (*RouteReport_Error) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescGZIP(), []int{8, 0}
}

func (x *RouteReport_Error) GetType() RouteReport_Error_Type {
	if x != nil {
		return x.Type
	}
	return RouteReport_Error_InvalidMatcherError
}

func (x *RouteReport_Error) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// warning types for the given route config
type RouteReport_Warning struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the type of the error
	Type RouteReport_Warning_Type `protobuf:"varint,1,opt,name=type,proto3,enum=gloo.solo.io.RouteReport_Warning_Type" json:"type,omitempty"`
	// any extra info as a string
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *RouteReport_Warning) Reset() {
	*x = RouteReport_Warning{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteReport_Warning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteReport_Warning) ProtoMessage() {}

func (x *RouteReport_Warning) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteReport_Warning.ProtoReflect.Descriptor instead.
func (*RouteReport_Warning) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescGZIP(), []int{8, 1}
}

func (x *RouteReport_Warning) GetType() RouteReport_Warning_Type {
	if x != nil {
		return x.Type
	}
	return RouteReport_Warning_InvalidDestinationWarning
}

func (x *RouteReport_Warning) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// error types for top-level tcp listener config
type TcpListenerReport_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the type of the error
	Type TcpListenerReport_Error_Type `protobuf:"varint,1,opt,name=type,proto3,enum=gloo.solo.io.TcpListenerReport_Error_Type" json:"type,omitempty"`
	// any extra info as a string
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *TcpListenerReport_Error) Reset() {
	*x = TcpListenerReport_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TcpListenerReport_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TcpListenerReport_Error) ProtoMessage() {}

func (x *TcpListenerReport_Error) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TcpListenerReport_Error.ProtoReflect.Descriptor instead.
func (*TcpListenerReport_Error) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescGZIP(), []int{9, 0}
}

func (x *TcpListenerReport_Error) GetType() TcpListenerReport_Error_Type {
	if x != nil {
		return x.Type
	}
	return TcpListenerReport_Error_NameNotUniqueError
}

func (x *TcpListenerReport_Error) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// error types for tcp host config
type TcpHostReport_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the type of the error
	Type TcpHostReport_Error_Type `protobuf:"varint,1,opt,name=type,proto3,enum=gloo.solo.io.TcpHostReport_Error_Type" json:"type,omitempty"`
	// any extra info as a string
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *TcpHostReport_Error) Reset() {
	*x = TcpHostReport_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TcpHostReport_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TcpHostReport_Error) ProtoMessage() {}

func (x *TcpHostReport_Error) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TcpHostReport_Error.ProtoReflect.Descriptor instead.
func (*TcpHostReport_Error) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescGZIP(), []int{10, 0}
}

func (x *TcpHostReport_Error) GetType() TcpHostReport_Error_Type {
	if x != nil {
		return x.Type
	}
	return TcpHostReport_Error_NameNotUniqueError
}

func (x *TcpHostReport_Error) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto protoreflect.FileDescriptor

var file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDesc = []byte{
	0x0a, 0x50, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c,
	0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x70, 0x63,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0c, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f,
	0x1a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c,
	0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4a, 0x0a, 0x1d, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6c, 0x6f,
	0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52,
	0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x22, 0x5e, 0x0a, 0x1e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x4f, 0x6e, 0x52, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x18, 0x0a, 0x16, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4f, 0x6e, 0x52, 0x65, 0x73, 0x79, 0x6e,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x56, 0x0a, 0x0b, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x47, 0x0a, 0x10, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69,
	0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x0f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x22, 0xd1, 0x03, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x3a, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f,
	0x2e, 0x69, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x12, 0x54, 0x0a, 0x14, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x48, 0x74,
	0x74, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x48, 0x00, 0x52, 0x12, 0x68, 0x74, 0x74, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x51, 0x0a, 0x13, 0x74, 0x63, 0x70, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e,
	0x69, 0x6f, 0x2e, 0x54, 0x63, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x11, 0x74, 0x63, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0xc1, 0x01, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x3b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x27, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x63, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x12, 0x4e, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x55, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x42, 0x69, 0x6e, 0x64,
	0x50, 0x6f, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x53, 0x4c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x03, 0x42, 0x16, 0x0a,
	0x14, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0xa6, 0x02, 0x0a, 0x12, 0x48, 0x74, 0x74, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x3e, 0x0a, 0x06,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67,
	0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x48, 0x74, 0x74, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x51, 0x0a, 0x14,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6c, 0x6f,
	0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x12, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x1a,
	0x7d, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x22, 0x1b, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x22, 0xda,
	0x02, 0x0a, 0x11, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x3d, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f,
	0x2e, 0x69, 0x6f, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x48, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x12, 0x3e, 0x0a, 0x0d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6c, 0x6f,
	0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x0c, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x1a, 0xc5, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3e, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x67, 0x6c,
	0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x64, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x12, 0x4e, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73,
	0x4e, 0x6f, 0x74, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01,
	0x12, 0x13, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x03, 0x22, 0x9e, 0x03, 0x0a, 0x0b,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6c,
	0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x12, 0x3d, 0x0a, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x73, 0x1a, 0x8f, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x38, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x67, 0x6c,
	0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22,
	0x34, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x6e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00,
	0x12, 0x13, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x10, 0x01, 0x1a, 0x84, 0x01, 0x0a, 0x07, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x12, 0x3a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x26, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x57, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x25, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x19, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x22, 0xe0, 0x02, 0x0a,
	0x11, 0x54, 0x63, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x3d, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69,
	0x6f, 0x2e, 0x54, 0x63, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x12, 0x45, 0x0a, 0x10, 0x74, 0x63, 0x70, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6c,
	0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x54, 0x63, 0x70, 0x48, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x0e, 0x74, 0x63, 0x70, 0x48, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x1a, 0xc4, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x3e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2a, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e,
	0x54, 0x63, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x63, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x4e, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x55, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x42, 0x69,
	0x6e, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x53, 0x4c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x03, 0x22,
	0xfa, 0x01, 0x0a, 0x0d, 0x54, 0x63, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x39, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f,
	0x2e, 0x54, 0x63, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x1a, 0xad, 0x01, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f,
	0x2e, 0x69, 0x6f, 0x2e, 0x54, 0x63, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x50, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x4e, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x55, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x49, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x02, 0x32, 0xe7, 0x01, 0x0a,
	0x16, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5f, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x4f, 0x6e, 0x52, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x23, 0x2e, 0x67, 0x6c, 0x6f, 0x6f,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4f,
	0x6e, 0x52, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x4f, 0x6e, 0x52, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x6c, 0x0a, 0x0d, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x2b, 0x2e, 0x67, 0x6c, 0x6f, 0x6f,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x6c, 0x6f,
	0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescOnce sync.Once
	file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescData = file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDesc
)

func file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescData)
	})
	return file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDescData
}

var file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_goTypes = []interface{}{
	(ListenerReport_Error_Type)(0),         // 0: gloo.solo.io.ListenerReport.Error.Type
	(HttpListenerReport_Error_Type)(0),     // 1: gloo.solo.io.HttpListenerReport.Error.Type
	(VirtualHostReport_Error_Type)(0),      // 2: gloo.solo.io.VirtualHostReport.Error.Type
	(RouteReport_Error_Type)(0),            // 3: gloo.solo.io.RouteReport.Error.Type
	(RouteReport_Warning_Type)(0),          // 4: gloo.solo.io.RouteReport.Warning.Type
	(TcpListenerReport_Error_Type)(0),      // 5: gloo.solo.io.TcpListenerReport.Error.Type
	(TcpHostReport_Error_Type)(0),          // 6: gloo.solo.io.TcpHostReport.Error.Type
	(*ProxyValidationServiceRequest)(nil),  // 7: gloo.solo.io.ProxyValidationServiceRequest
	(*ProxyValidationServiceResponse)(nil), // 8: gloo.solo.io.ProxyValidationServiceResponse
	(*NotifyOnResyncRequest)(nil),          // 9: gloo.solo.io.NotifyOnResyncRequest
	(*NotifyOnResyncResponse)(nil),         // 10: gloo.solo.io.NotifyOnResyncResponse
	(*ProxyReport)(nil),                    // 11: gloo.solo.io.ProxyReport
	(*ListenerReport)(nil),                 // 12: gloo.solo.io.ListenerReport
	(*HttpListenerReport)(nil),             // 13: gloo.solo.io.HttpListenerReport
	(*VirtualHostReport)(nil),              // 14: gloo.solo.io.VirtualHostReport
	(*RouteReport)(nil),                    // 15: gloo.solo.io.RouteReport
	(*TcpListenerReport)(nil),              // 16: gloo.solo.io.TcpListenerReport
	(*TcpHostReport)(nil),                  // 17: gloo.solo.io.TcpHostReport
	(*ListenerReport_Error)(nil),           // 18: gloo.solo.io.ListenerReport.Error
	(*HttpListenerReport_Error)(nil),       // 19: gloo.solo.io.HttpListenerReport.Error
	(*VirtualHostReport_Error)(nil),        // 20: gloo.solo.io.VirtualHostReport.Error
	(*RouteReport_Error)(nil),              // 21: gloo.solo.io.RouteReport.Error
	(*RouteReport_Warning)(nil),            // 22: gloo.solo.io.RouteReport.Warning
	(*TcpListenerReport_Error)(nil),        // 23: gloo.solo.io.TcpListenerReport.Error
	(*TcpHostReport_Error)(nil),            // 24: gloo.solo.io.TcpHostReport.Error
	(*v1.Proxy)(nil),                       // 25: gloo.solo.io.Proxy
}
var file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_depIdxs = []int32{
	25, // 0: gloo.solo.io.ProxyValidationServiceRequest.proxy:type_name -> gloo.solo.io.Proxy
	11, // 1: gloo.solo.io.ProxyValidationServiceResponse.proxy_report:type_name -> gloo.solo.io.ProxyReport
	12, // 2: gloo.solo.io.ProxyReport.listener_reports:type_name -> gloo.solo.io.ListenerReport
	18, // 3: gloo.solo.io.ListenerReport.errors:type_name -> gloo.solo.io.ListenerReport.Error
	13, // 4: gloo.solo.io.ListenerReport.http_listener_report:type_name -> gloo.solo.io.HttpListenerReport
	16, // 5: gloo.solo.io.ListenerReport.tcp_listener_report:type_name -> gloo.solo.io.TcpListenerReport
	19, // 6: gloo.solo.io.HttpListenerReport.errors:type_name -> gloo.solo.io.HttpListenerReport.Error
	14, // 7: gloo.solo.io.HttpListenerReport.virtual_host_reports:type_name -> gloo.solo.io.VirtualHostReport
	20, // 8: gloo.solo.io.VirtualHostReport.errors:type_name -> gloo.solo.io.VirtualHostReport.Error
	15, // 9: gloo.solo.io.VirtualHostReport.route_reports:type_name -> gloo.solo.io.RouteReport
	21, // 10: gloo.solo.io.RouteReport.errors:type_name -> gloo.solo.io.RouteReport.Error
	22, // 11: gloo.solo.io.RouteReport.warnings:type_name -> gloo.solo.io.RouteReport.Warning
	23, // 12: gloo.solo.io.TcpListenerReport.errors:type_name -> gloo.solo.io.TcpListenerReport.Error
	17, // 13: gloo.solo.io.TcpListenerReport.tcp_host_reports:type_name -> gloo.solo.io.TcpHostReport
	24, // 14: gloo.solo.io.TcpHostReport.errors:type_name -> gloo.solo.io.TcpHostReport.Error
	0,  // 15: gloo.solo.io.ListenerReport.Error.type:type_name -> gloo.solo.io.ListenerReport.Error.Type
	1,  // 16: gloo.solo.io.HttpListenerReport.Error.type:type_name -> gloo.solo.io.HttpListenerReport.Error.Type
	2,  // 17: gloo.solo.io.VirtualHostReport.Error.type:type_name -> gloo.solo.io.VirtualHostReport.Error.Type
	3,  // 18: gloo.solo.io.RouteReport.Error.type:type_name -> gloo.solo.io.RouteReport.Error.Type
	4,  // 19: gloo.solo.io.RouteReport.Warning.type:type_name -> gloo.solo.io.RouteReport.Warning.Type
	5,  // 20: gloo.solo.io.TcpListenerReport.Error.type:type_name -> gloo.solo.io.TcpListenerReport.Error.Type
	6,  // 21: gloo.solo.io.TcpHostReport.Error.type:type_name -> gloo.solo.io.TcpHostReport.Error.Type
	9,  // 22: gloo.solo.io.ProxyValidationService.NotifyOnResync:input_type -> gloo.solo.io.NotifyOnResyncRequest
	7,  // 23: gloo.solo.io.ProxyValidationService.ValidateProxy:input_type -> gloo.solo.io.ProxyValidationServiceRequest
	10, // 24: gloo.solo.io.ProxyValidationService.NotifyOnResync:output_type -> gloo.solo.io.NotifyOnResyncResponse
	8,  // 25: gloo.solo.io.ProxyValidationService.ValidateProxy:output_type -> gloo.solo.io.ProxyValidationServiceResponse
	24, // [24:26] is the sub-list for method output_type
	22, // [22:24] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() {
	file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_init()
}
func file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_init() {
	if File_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyValidationServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyValidationServiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyOnResyncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyOnResyncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenerReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpListenerReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualHostReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouteReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TcpListenerReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TcpHostReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenerReport_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpListenerReport_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VirtualHostReport_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouteReport_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouteReport_Warning); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TcpListenerReport_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TcpHostReport_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*ListenerReport_HttpListenerReport)(nil),
		(*ListenerReport_TcpListenerReport)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_depIdxs,
		EnumInfos:         file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_enumTypes,
		MessageInfos:      file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto = out.File
	file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_rawDesc = nil
	file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_goTypes = nil
	file_github_com_solo_io_gloo_projects_gloo_api_grpc_validation_proxy_validation_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProxyValidationServiceClient is the client API for ProxyValidationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProxyValidationServiceClient interface {
	// Notify the client whenever the Proxy Validation Service resyncs
	NotifyOnResync(ctx context.Context, in *NotifyOnResyncRequest, opts ...grpc.CallOption) (ProxyValidationService_NotifyOnResyncClient, error)
	// Submit a proxy for validation
	ValidateProxy(ctx context.Context, in *ProxyValidationServiceRequest, opts ...grpc.CallOption) (*ProxyValidationServiceResponse, error)
}

type proxyValidationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewProxyValidationServiceClient(cc grpc.ClientConnInterface) ProxyValidationServiceClient {
	return &proxyValidationServiceClient{cc}
}

func (c *proxyValidationServiceClient) NotifyOnResync(ctx context.Context, in *NotifyOnResyncRequest, opts ...grpc.CallOption) (ProxyValidationService_NotifyOnResyncClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ProxyValidationService_serviceDesc.Streams[0], "/gloo.solo.io.ProxyValidationService/NotifyOnResync", opts...)
	if err != nil {
		return nil, err
	}
	x := &proxyValidationServiceNotifyOnResyncClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ProxyValidationService_NotifyOnResyncClient interface {
	Recv() (*NotifyOnResyncResponse, error)
	grpc.ClientStream
}

type proxyValidationServiceNotifyOnResyncClient struct {
	grpc.ClientStream
}

func (x *proxyValidationServiceNotifyOnResyncClient) Recv() (*NotifyOnResyncResponse, error) {
	m := new(NotifyOnResyncResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *proxyValidationServiceClient) ValidateProxy(ctx context.Context, in *ProxyValidationServiceRequest, opts ...grpc.CallOption) (*ProxyValidationServiceResponse, error) {
	out := new(ProxyValidationServiceResponse)
	err := c.cc.Invoke(ctx, "/gloo.solo.io.ProxyValidationService/ValidateProxy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProxyValidationServiceServer is the server API for ProxyValidationService service.
type ProxyValidationServiceServer interface {
	// Notify the client whenever the Proxy Validation Service resyncs
	NotifyOnResync(*NotifyOnResyncRequest, ProxyValidationService_NotifyOnResyncServer) error
	// Submit a proxy for validation
	ValidateProxy(context.Context, *ProxyValidationServiceRequest) (*ProxyValidationServiceResponse, error)
}

// UnimplementedProxyValidationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedProxyValidationServiceServer struct {
}

func (*UnimplementedProxyValidationServiceServer) NotifyOnResync(*NotifyOnResyncRequest, ProxyValidationService_NotifyOnResyncServer) error {
	return status.Errorf(codes.Unimplemented, "method NotifyOnResync not implemented")
}
func (*UnimplementedProxyValidationServiceServer) ValidateProxy(context.Context, *ProxyValidationServiceRequest) (*ProxyValidationServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateProxy not implemented")
}

func RegisterProxyValidationServiceServer(s *grpc.Server, srv ProxyValidationServiceServer) {
	s.RegisterService(&_ProxyValidationService_serviceDesc, srv)
}

func _ProxyValidationService_NotifyOnResync_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(NotifyOnResyncRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ProxyValidationServiceServer).NotifyOnResync(m, &proxyValidationServiceNotifyOnResyncServer{stream})
}

type ProxyValidationService_NotifyOnResyncServer interface {
	Send(*NotifyOnResyncResponse) error
	grpc.ServerStream
}

type proxyValidationServiceNotifyOnResyncServer struct {
	grpc.ServerStream
}

func (x *proxyValidationServiceNotifyOnResyncServer) Send(m *NotifyOnResyncResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _ProxyValidationService_ValidateProxy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProxyValidationServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyValidationServiceServer).ValidateProxy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gloo.solo.io.ProxyValidationService/ValidateProxy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyValidationServiceServer).ValidateProxy(ctx, req.(*ProxyValidationServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProxyValidationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gloo.solo.io.ProxyValidationService",
	HandlerType: (*ProxyValidationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ValidateProxy",
			Handler:    _ProxyValidationService_ValidateProxy_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "NotifyOnResync",
			Handler:       _ProxyValidationService_NotifyOnResync_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "github.com/solo-io/gloo/projects/gloo/api/grpc/validation/proxy_validation.proto",
}
